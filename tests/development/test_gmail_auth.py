#!/usr/bin/env python3
"""
Script para diagnosticar problemas de autenticaci√≥n con Gmail
"""

import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def test_gmail_connection():
    """Prueba la conexi√≥n con Gmail usando diferentes m√©todos"""
    
    email = "vansnaranjo@gmail.com"
    password = "M4r14l4r@"
    
    print("üîç Diagnosticando conexi√≥n con Gmail...")
    print(f"üìß Email: {email}")
    print("üîê Contrase√±a: [OCULTA]")
    print()
    
    # Probar conexi√≥n b√°sica
    try:
        print("1Ô∏è‚É£ Probando conexi√≥n SMTP b√°sica...")
        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        print("‚úÖ Conexi√≥n TLS establecida")
        
        # Intentar login
        print("2Ô∏è‚É£ Intentando autenticaci√≥n...")
        server.login(email, password)
        print("‚úÖ Autenticaci√≥n exitosa!")
        
        server.quit()
        return True
        
    except smtplib.SMTPAuthenticationError as e:
        print(f"‚ùå Error de autenticaci√≥n: {e}")
        print()
        print("üîß POSIBLES SOLUCIONES:")
        print("   1. Activar 'Verificaci√≥n en 2 pasos' en tu cuenta de Google")
        print("   2. Generar una 'Contrase√±a de aplicaci√≥n' espec√≠fica")
        print("   3. Usar la contrase√±a de aplicaci√≥n en lugar de tu contrase√±a normal")
        print()
        print("üìã PASOS PARA CREAR CONTRASE√ëA DE APLICACI√ìN:")
        print("   1. Ve a https://myaccount.google.com/security")
        print("   2. Activa 'Verificaci√≥n en 2 pasos'")
        print("   3. Ve a 'Contrase√±as de aplicaciones'")
        print("   4. Selecciona 'Correo' y 'Otro (nombre personalizado)'")
        print("   5. Escribe 'Synapsis Apoyos' como nombre")
        print("   6. Usa la contrase√±a generada (16 caracteres) en el .env")
        return False
        
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False

def test_email_sending():
    """Prueba enviar un email de prueba"""
    
    email = "vansnaranjo@gmail.com"
    password = "M4r14l4r@"
    
    try:
        print("3Ô∏è‚É£ Probando env√≠o de email de prueba...")
        
        # Crear mensaje
        msg = MIMEMultipart()
        msg['From'] = email
        msg['To'] = email  # Enviarse a s√≠ mismo
        msg['Subject'] = "Prueba de configuraci√≥n - Synapsis Apoyos"
        
        body = """
        ¬°Hola!
        
        Este es un email de prueba para verificar que la configuraci√≥n de correo
        de Synapsis Apoyos funciona correctamente.
        
        Si recibes este mensaje, la configuraci√≥n est√° funcionando.
        
        Saludos,
        Sistema Synapsis Apoyos
        """
        
        msg.attach(MIMEText(body, 'plain'))
        
        # Enviar
        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(email, password)
        server.send_message(msg)
        server.quit()
        
        print("‚úÖ Email de prueba enviado exitosamente!")
        print(f"üì¨ Revisa la bandeja de entrada de {email}")
        return True
        
    except Exception as e:
        print(f"‚ùå Error al enviar email: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("üß™ DIAGN√ìSTICO DE CONFIGURACI√ìN DE EMAIL")
    print("=" * 60)
    print()
    
    # Probar conexi√≥n
    if test_gmail_connection():
        # Si la conexi√≥n funciona, probar env√≠o
        test_email_sending()
    
    print()
    print("=" * 60)
    print("üèÅ DIAGN√ìSTICO COMPLETADO")
    print("=" * 60)