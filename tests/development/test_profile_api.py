#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
import requests
import json
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models.usuario import Usuario

def test_profile_api():
    """Probar las APIs del perfil del l√≠der"""
    app = create_app()
    
    with app.app_context():
        try:
            # Obtener el l√≠der
            lider = Usuario.query.filter_by(rol='lider').first()
            
            if not lider:
                print("‚ùå No se encontr√≥ ning√∫n l√≠der")
                return
            
            print(f"üîç Probando APIs de perfil para: {lider.email}")
            print(f"üë§ Nombre: {lider.get_nombre_completo()}")
            
            # Restablecer contrase√±a conocida para las pruebas
            print("\nüîÑ Restableciendo contrase√±a conocida para pruebas...")
            lider.set_password('lider123')
            db.session.commit()
            print("‚úÖ Contrase√±a restablecida a 'lider123'")
            
            # Configurar sesi√≥n para mantener cookies
            session = requests.Session()
            
            # 1. Hacer login
            print("\n1Ô∏è‚É£ Haciendo login...")
            login_data = {
                'email': lider.email,
                'password': 'lider123'
            }
            
            login_response = session.post('http://127.0.0.1:5000/auth/login', data=login_data)
            
            if login_response.status_code == 200 and ('dashboard' in login_response.url or 'lider' in login_response.url):
                print("‚úÖ Login exitoso")
            else:
                print(f"‚ùå Error en login: {login_response.status_code}")
                print(f"URL de respuesta: {login_response.url}")
                return
            
            # 2. Probar actualizaci√≥n de informaci√≥n personal
            print("\n2Ô∏è‚É£ Probando actualizaci√≥n de informaci√≥n personal...")
            info_data = {
                'nombre': 'Roberto',
                'apellido': 'Rodr√≠guez',
                'telefono': '3001234567',
                'email': lider.email
            }
            
            info_response = session.post(
                'http://127.0.0.1:5000/lider/perfil/actualizar-informacion',
                json=info_data,
                headers={'Content-Type': 'application/json'}
            )
            
            if info_response.status_code == 200:
                result = info_response.json()
                if result.get('success'):
                    print(f"‚úÖ Informaci√≥n actualizada: {result.get('message')}")
                else:
                    print(f"‚ùå Error actualizando informaci√≥n: {result.get('message')}")
            else:
                print(f"‚ùå Error HTTP actualizando informaci√≥n: {info_response.status_code}")
                print(f"Respuesta: {info_response.text}")
            
            # 3. Probar cambio de contrase√±a
            print("\n3Ô∏è‚É£ Probando cambio de contrase√±a...")
            password_data = {
                'password_actual': 'lider123',
                'password_nueva': 'nuevaPassword456',
                'password_confirmar': 'nuevaPassword456'
            }
            
            password_response = session.post(
                'http://127.0.0.1:5000/lider/perfil/cambiar-password',
                json=password_data,
                headers={'Content-Type': 'application/json'}
            )
            
            if password_response.status_code == 200:
                result = password_response.json()
                if result.get('success'):
                    print(f"‚úÖ Contrase√±a cambiada: {result.get('message')}")
                    
                    # Verificar que la nueva contrase√±a funciona en la base de datos
                    # Refrescar la sesi√≥n para obtener los datos actualizados
                    db.session.refresh(lider)
                    if lider.check_password('nuevaPassword456'):
                        print("‚úÖ Nueva contrase√±a verificada en base de datos")
                    else:
                        print("‚ùå Nueva contrase√±a NO funciona en base de datos")
                        
                    # Verificar que la contrase√±a anterior ya no funciona
                    if not lider.check_password('lider123'):
                        print("‚úÖ Contrase√±a anterior ya no es v√°lida")
                    else:
                        print("‚ùå Contrase√±a anterior a√∫n funciona (problema)")
                        
                else:
                    print(f"‚ùå Error cambiando contrase√±a: {result.get('message')}")
            else:
                print(f"‚ùå Error HTTP cambiando contrase√±a: {password_response.status_code}")
                print(f"Respuesta: {password_response.text}")
            
            # 4. Verificar informaci√≥n actualizada
            print("\n4Ô∏è‚É£ Verificando informaci√≥n actualizada en base de datos...")
            db.session.refresh(lider)
            print(f"üìß Email: {lider.email}")
            print(f"üë§ Nombre: {lider.get_nombre_completo()}")
            print(f"üì± Tel√©fono: {lider.telefono}")
            
            # 5. Probar login con nueva contrase√±a
            print("\n5Ô∏è‚É£ Probando login con nueva contrase√±a...")
            new_session = requests.Session()
            new_login_data = {
                'email': lider.email,
                'password': 'nuevaPassword456'
            }
            
            new_login_response = new_session.post('http://127.0.0.1:5000/auth/login', data=new_login_data)
            
            if new_login_response.status_code == 200 and ('dashboard' in new_login_response.url or 'lider' in new_login_response.url):
                print("‚úÖ Login con nueva contrase√±a exitoso")
            else:
                print(f"‚ùå Error en login con nueva contrase√±a: {new_login_response.status_code}")
            
            print("\nüéâ ¬°Todas las pruebas completadas!")
            
        except Exception as e:
            print(f"‚ùå Error en las pruebas: {str(e)}")
            import traceback
            traceback.print_exc()

if __name__ == '__main__':
    test_profile_api()